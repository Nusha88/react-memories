{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE, FETCH_BY_SEARCH, START_LOADING, END_LOADING } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\nexport const getPost = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPost(id);\n    dispatch({\n      type: FETCH_POST,\n      payload: {\n        post: data\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data,\n        currentPage,\n        numberOfPages\n      }\n    } = await api.fetchPosts(page);\n    dispatch({\n      type: FETCH_ALL,\n      payload: {\n        data,\n        currentPage,\n        numberOfPages\n      }\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: {\n        data\n      }\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["FETCH_ALL","CREATE","UPDATE","DELETE","FETCH_BY_SEARCH","START_LOADING","END_LOADING","api","getPost","id","dispatch","type","data","fetchPost","FETCH_POST","payload","post","error","console","log","getPosts","page","currentPage","numberOfPages","fetchPosts","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","updatePost","deletePost","message","likePost"],"sources":["/Users/anndvorkina/WebstormProjects/memories-mern/client/src/actions/posts.js"],"sourcesContent":["import {FETCH_ALL, CREATE, UPDATE, DELETE, FETCH_BY_SEARCH, START_LOADING, END_LOADING} from '../constants/actionTypes';\nimport * as api from '../api/index.js'\n\n\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const { data } = await api.fetchPost(id);\n\n    dispatch({ type: FETCH_POST, payload: { post: data } });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPosts = (page) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data: { data, currentPage, numberOfPages } } = await api.fetchPosts(page);\n\n    dispatch({ type: FETCH_ALL, payload: { data, currentPage, numberOfPages } });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\n\n    dispatch({ type: FETCH_BY_SEARCH, payload: { data } });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const createPost = (post) => async (dispatch) => {\n  try {\n    const {data} = await api.createPost(post);\n    dispatch({type: CREATE, payload: data})\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n    const {data} = await api.updatePost(id, post);\n    dispatch({type: UPDATE, payload: data})\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await api.deletePost(id);\n\n    dispatch({type: DELETE, payload: id});\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const likePost = (id) => async (dispatch) => {\n  try {\n    const {data} = await api.likePost(id);\n    dispatch({type: UPDATE, payload: data})\n  } catch (error) {\n    console.log(error)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}