{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE, FETCH_BY_SEARCH, START_LOADING, END_LOADING } from '../constants/actionTypes';\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case END_LOADING:\n      return { ...state,\n        isLoading: false\n      };\n\n    case FETCH_ALL:\n      return { ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      };\n\n    case FETCH_BY_SEARCH:\n      return { ...state,\n        posts: action.payload.data\n      };\n\n    case UPDATE:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case CREATE:\n      return { ...state,\n        posts: [...state.posts, action.payload]\n      };\n\n    case DELETE:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"names":["FETCH_ALL","CREATE","UPDATE","DELETE","FETCH_BY_SEARCH","START_LOADING","END_LOADING","state","action","type","isLoading","posts","payload","data","currentPage","numberOfPages","map","post","_id","filter"],"sources":["/Users/anndvorkina/WebstormProjects/memories-mern/client/src/reducers/posts.js"],"sourcesContent":["import {FETCH_ALL, CREATE, UPDATE, DELETE, FETCH_BY_SEARCH, START_LOADING, END_LOADING} from '../constants/actionTypes';\nexport default (state = [], action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state, isLoading: true };\n    case END_LOADING:\n      return { ...state, isLoading: false };\n    case FETCH_ALL:\n      return {\n        ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages,\n      };\n    case FETCH_BY_SEARCH:\n      return { ...state, posts: action.payload.data };\n    case UPDATE:\n      return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\n    case CREATE:\n      return { ...state, posts: [...state.posts, action.payload] };\n    case DELETE:\n      return { ...state, posts: state.posts.filter((post) => post._id !== action.payload) };\n    default:\n      return state;\n  }\n}\n"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCC,MAAnC,EAA2CC,eAA3C,EAA4DC,aAA5D,EAA2EC,WAA3E,QAA6F,0BAA7F;AACA,gBAAe,YAAwB;EAAA,IAAvBC,KAAuB,uEAAf,EAAe;EAAA,IAAXC,MAAW;;EACrC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKJ,aAAL;MACE,OAAO,EAAE,GAAGE,KAAL;QAAYG,SAAS,EAAE;MAAvB,CAAP;;IACF,KAAKJ,WAAL;MACE,OAAO,EAAE,GAAGC,KAAL;QAAYG,SAAS,EAAE;MAAvB,CAAP;;IACF,KAAKV,SAAL;MACE,OAAO,EACL,GAAGO,KADE;QAELI,KAAK,EAAEH,MAAM,CAACI,OAAP,CAAeC,IAFjB;QAGLC,WAAW,EAAEN,MAAM,CAACI,OAAP,CAAeE,WAHvB;QAILC,aAAa,EAAEP,MAAM,CAACI,OAAP,CAAeG;MAJzB,CAAP;;IAMF,KAAKX,eAAL;MACE,OAAO,EAAE,GAAGG,KAAL;QAAYI,KAAK,EAAEH,MAAM,CAACI,OAAP,CAAeC;MAAlC,CAAP;;IACF,KAAKX,MAAL;MACE,OAAO,EAAE,GAAGK,KAAL;QAAYI,KAAK,EAAEJ,KAAK,CAACI,KAAN,CAAYK,GAAZ,CAAiBC,IAAD,IAAWA,IAAI,CAACC,GAAL,KAAaV,MAAM,CAACI,OAAP,CAAeM,GAA5B,GAAkCV,MAAM,CAACI,OAAzC,GAAmDK,IAA9E;MAAnB,CAAP;;IACF,KAAKhB,MAAL;MACE,OAAO,EAAE,GAAGM,KAAL;QAAYI,KAAK,EAAE,CAAC,GAAGJ,KAAK,CAACI,KAAV,EAAiBH,MAAM,CAACI,OAAxB;MAAnB,CAAP;;IACF,KAAKT,MAAL;MACE,OAAO,EAAE,GAAGI,KAAL;QAAYI,KAAK,EAAEJ,KAAK,CAACI,KAAN,CAAYQ,MAAZ,CAAoBF,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaV,MAAM,CAACI,OAAjD;MAAnB,CAAP;;IACF;MACE,OAAOL,KAAP;EArBJ;AAuBD,CAxBD"},"metadata":{},"sourceType":"module"}