{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE, FETCH_BY_SEARCH } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\nexport const getPosts = page => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPosts(page);\n    console.log(data);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    // dispatch({ type: START_LOADING });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: {\n        data\n      }\n    }); // dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["FETCH_ALL","CREATE","UPDATE","DELETE","FETCH_BY_SEARCH","api","getPosts","page","dispatch","data","fetchPosts","console","log","type","payload","error","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","post","updatePost","id","deletePost","message","likePost"],"sources":["/Users/anndvorkina/WebstormProjects/memories-mern/client/src/actions/posts.js"],"sourcesContent":["import {FETCH_ALL, CREATE, UPDATE, DELETE, FETCH_BY_SEARCH} from '../constants/actionTypes';\nimport * as api from '../api/index.js'\n\nexport const getPosts = (page) => async (dispatch) => {\n  try {\n    const {data} = await api.fetchPosts(page);\n    console.log(data)\n\n    dispatch({type: FETCH_ALL, payload: data});\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\n  try {\n    // dispatch({ type: START_LOADING });\n    const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\n\n    dispatch({ type: FETCH_BY_SEARCH, payload: { data } });\n    // dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const createPost = (post) => async (dispatch) => {\n  try {\n    const {data} = await api.createPost(post);\n    dispatch({type: CREATE, payload: data})\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n    const {data} = await api.updatePost(id, post);\n    dispatch({type: UPDATE, payload: data})\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await api.deletePost(id);\n\n    dispatch({type: DELETE, payload: id});\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const likePost = (id) => async (dispatch) => {\n  try {\n    const {data} = await api.likePost(id);\n    dispatch({type: UPDATE, payload: data})\n  } catch (error) {\n    console.log(error)\n  }\n}\n"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCC,MAAnC,EAA2CC,eAA3C,QAAiE,0BAAjE;AACA,OAAO,KAAKC,GAAZ,MAAqB,iBAArB;AAEA,OAAO,MAAMC,QAAQ,GAAIC,IAAD,IAAU,MAAOC,QAAP,IAAoB;EACpD,IAAI;IACF,MAAM;MAACC;IAAD,IAAS,MAAMJ,GAAG,CAACK,UAAJ,CAAeH,IAAf,CAArB;IACAI,OAAO,CAACC,GAAR,CAAYH,IAAZ;IAEAD,QAAQ,CAAC;MAACK,IAAI,EAAEb,SAAP;MAAkBc,OAAO,EAAEL;IAA3B,CAAD,CAAR;EACD,CALD,CAKE,OAAOM,KAAP,EAAc;IACdJ,OAAO,CAACC,GAAR,CAAYG,KAAZ;EACD;AACF,CATM;AAWP,OAAO,MAAMC,gBAAgB,GAAIC,WAAD,IAAiB,MAAOT,QAAP,IAAoB;EACnE,IAAI;IACF;IACA,MAAM;MAAEC,IAAI,EAAE;QAAEA;MAAF;IAAR,IAAqB,MAAMJ,GAAG,CAACa,kBAAJ,CAAuBD,WAAvB,CAAjC;IAEAT,QAAQ,CAAC;MAAEK,IAAI,EAAET,eAAR;MAAyBU,OAAO,EAAE;QAAEL;MAAF;IAAlC,CAAD,CAAR,CAJE,CAKF;EACD,CAND,CAME,OAAOM,KAAP,EAAc;IACdJ,OAAO,CAACC,GAAR,CAAYG,KAAZ;EACD;AACF,CAVM;AAYP,OAAO,MAAMI,UAAU,GAAIC,IAAD,IAAU,MAAOZ,QAAP,IAAoB;EACtD,IAAI;IACF,MAAM;MAACC;IAAD,IAAS,MAAMJ,GAAG,CAACc,UAAJ,CAAeC,IAAf,CAArB;IACAZ,QAAQ,CAAC;MAACK,IAAI,EAAEZ,MAAP;MAAea,OAAO,EAAEL;IAAxB,CAAD,CAAR;EACD,CAHD,CAGE,OAAOM,KAAP,EAAc;IACdJ,OAAO,CAACC,GAAR,CAAYG,KAAZ;EACD;AACF,CAPM;AASP,OAAO,MAAMM,UAAU,GAAG,CAACC,EAAD,EAAKF,IAAL,KAAc,MAAOZ,QAAP,IAAoB;EAC1D,IAAI;IACF,MAAM;MAACC;IAAD,IAAS,MAAMJ,GAAG,CAACgB,UAAJ,CAAeC,EAAf,EAAmBF,IAAnB,CAArB;IACAZ,QAAQ,CAAC;MAACK,IAAI,EAAEX,MAAP;MAAeY,OAAO,EAAEL;IAAxB,CAAD,CAAR;EACD,CAHD,CAGE,OAAOM,KAAP,EAAc;IACdJ,OAAO,CAACC,GAAR,CAAYG,KAAZ;EACD;AACF,CAPM;AASP,OAAO,MAAMQ,UAAU,GAAID,EAAD,IAAQ,MAAOd,QAAP,IAAoB;EACpD,IAAI;IACF,MAAMH,GAAG,CAACkB,UAAJ,CAAeD,EAAf,CAAN;IAEAd,QAAQ,CAAC;MAACK,IAAI,EAAEV,MAAP;MAAeW,OAAO,EAAEQ;IAAxB,CAAD,CAAR;EACD,CAJD,CAIE,OAAOP,KAAP,EAAc;IACdJ,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACS,OAAlB;EACD;AACF,CARM;AAUP,OAAO,MAAMC,QAAQ,GAAIH,EAAD,IAAQ,MAAOd,QAAP,IAAoB;EAClD,IAAI;IACF,MAAM;MAACC;IAAD,IAAS,MAAMJ,GAAG,CAACoB,QAAJ,CAAaH,EAAb,CAArB;IACAd,QAAQ,CAAC;MAACK,IAAI,EAAEX,MAAP;MAAeY,OAAO,EAAEL;IAAxB,CAAD,CAAR;EACD,CAHD,CAGE,OAAOM,KAAP,EAAc;IACdJ,OAAO,CAACC,GAAR,CAAYG,KAAZ;EACD;AACF,CAPM"},"metadata":{},"sourceType":"module"}