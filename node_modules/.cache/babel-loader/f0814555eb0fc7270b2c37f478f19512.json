{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE } from '../constants/actionTypes';\nexport default (function () {\n  let posts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case DELETE:\n      return posts.filter(post => post._id === action.payload);\n\n    case FETCH_ALL:\n      return action.payload;\n\n    case UPDATE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case CREATE:\n      return [...posts, action.payload];\n\n    default:\n      return posts;\n  }\n});","map":{"version":3,"names":["FETCH_ALL","CREATE","UPDATE","DELETE","posts","action","type","filter","post","_id","payload","map"],"sources":["/Users/anndvorkina/WebstormProjects/memories-mern/client/src/reducers/posts.js"],"sourcesContent":["import { FETCH_ALL, CREATE, UPDATE, DELETE} from '../constants/actionTypes';\nexport default (posts = [], action) => {\n  switch (action.type) {\n    case DELETE:\n      return posts.filter((post => post._id === action.payload));\n    case FETCH_ALL:\n      return action.payload;\n    case UPDATE:\n      return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n    case CREATE:\n      return [...posts, action.payload];\n    default:\n      return posts;\n  }\n}\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,MAApC,QAAiD,0BAAjD;AACA,gBAAe,YAAwB;EAAA,IAAvBC,KAAuB,uEAAf,EAAe;EAAA,IAAXC,MAAW;;EACrC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKH,MAAL;MACE,OAAOC,KAAK,CAACG,MAAN,CAAcC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaJ,MAAM,CAACK,OAA1C,CAAP;;IACF,KAAKV,SAAL;MACE,OAAOK,MAAM,CAACK,OAAd;;IACF,KAAKR,MAAL;MACE,OAAOE,KAAK,CAACO,GAAN,CAAWH,IAAD,IAAWA,IAAI,CAACC,GAAL,KAAaJ,MAAM,CAACK,OAAP,CAAeD,GAA5B,GAAkCJ,MAAM,CAACK,OAAzC,GAAmDF,IAAxE,CAAP;;IACF,KAAKP,MAAL;MACE,OAAO,CAAC,GAAGG,KAAJ,EAAWC,MAAM,CAACK,OAAlB,CAAP;;IACF;MACE,OAAON,KAAP;EAVJ;AAYD,CAbD"},"metadata":{},"sourceType":"module"}